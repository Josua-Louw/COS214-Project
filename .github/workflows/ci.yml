name: CI/CD Pipeline

on:
  push:
    branches: [ main, developer ]
  pull_request:
    branches: [ main, developer ]

env:
  PROJECT_DIR: "Code" 

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            g++ \
            valgrind \
            lcov \
            gcovr

      # Build the project (for doctest)
      - name: Build project (testingMain)
        run: make -C $PROJECT_DIR MAIN_FILE=testingMain all

      # Run doctests
      - name: Run doctests
        run: make -C $PROJECT_DIR MAIN_FILE=testingMain run 

      # Run Valgrind (optional memory check)
      - name: Run Valgrind (memory check)
        if: success()
        run: |
          make -C $PROJECT_DIR valgrind || echo "Valgrind found issues (non-fatal)"

      # Generate coverage report (only on developer/main)
      - name: Generate coverage report
        if: github.ref == 'refs/heads/developer' || github.ref == 'refs/heads/main'
        run: make -C $PROJECT_DIR coverage

      # Upload coverage as artifact
      - name: Upload coverage report as artifact
        if: github.ref == 'refs/heads/developer' || github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.run_number }}
          path: |
            ${{ env.PROJECT_DIR }}/coverage.txt
            ${{ env.PROJECT_DIR }}/output.html
          retention-days: 7
